from pynput.mouse import Controller, Button, Listener
import time

mouse = Controller()
pos_time = [
        [(764, 418),  0], #1
        [(1010, 235), 0.88], #2
        [(1017, 608), 1.85], #3
        [(521, 235),  2.65], #4
        [(513, 608),  3.55], #5
        [(764, 162),  4.48], #6
        [(1063, 418), 5.45], #7
        [(1018, 295), 5.92], #8
        [(455, 420),  6.82], #9
        [(525, 295),  7.22], #10
        [(482, 605),  8.18], #11
        [(595, 605),  9.02], #12
        [(705, 605),  9.95], #13
        [(818, 605),  10.95], #14
        [(926, 605),  11.75], #15
        [(1040, 605), 12.58], #16
        [(592, 377),  13.08], #17
        [(948, 377),  13.18], #18
        [(660, 226),  13.93], #19
        [(870, 226),  13.96], #20
        [(494, 615),  14.90], #21
        [(576, 530),  15.82], #22
        [(684, 445),  16.72], #23
        [(782, 350),  17.68], #24 
        [(1038, 612), 18.45], #25
        [(951, 529),  19.38], #26
        [(858, 444),  20.25], #27 
        [(758, 350),  20.68], #28 
        [(588, 238),  21.18], #29
        [(697, 238),  22.05], #30
        [(806, 238),  22.98], #30
        [(920, 238),  23.85], #31
        [(578, 606),  24.75], #32
        [(954, 606),  24.85], #33
        [(657, 445),  25.78], #34
        [(880, 445),  25.88], #35
        [(466, 607),  26.68], #36
        [(543, 500),  27.12], #37
        [(458, 426),  27.58], #38
        [(523, 293),  28.35], #39
        [(500, 481),  29.28], #40 
        [(642, 424),  30.22], #41
        [(760, 350),  31.15], #42
        [(897, 424),  31.98], #43
        [(1034, 489), 32.28], #44
        [(394, 318),  32.85], #45
        [(531, 426),  33.85], #46
        [(664, 326),  34.75], #47
        [(834, 419),  35.25], #48
        [(988, 326),  35.65], #49
        [(1140, 421), 36.48], #50
        [(770, 610),  37.48], #51
        [(766, 420),  38.25], #52
        [(460, 422),  39.15], #53
        [(560, 270),  39.23], #54
        [(766, 210),  40.05], #55
        [(968, 274),  41.02], #56
        [(1082, 422), 41.88], #57
        [(962, 583),  42.45], #58
        [(762, 651),  42.80], #59
        [(576, 575),  43.72], #60   
        [(642, 177),  44.05], #61   
        [(894, 278),  44.58], #62
        [(642, 374),  45.55], #63
        [(894, 470),  45.82], #64
        [(646, 569),  46.45], #65
        [(891, 672),  47.42], #66
        [(398, 322),  47.68], #67
        [(520, 518),  48.32], #68
        [(644, 615),  49.28], #69
        [(774, 394),  49.52], #70 
        [(913, 605),  50.08], #71 
        [(1019, 303), 50.88], #72
        [(486, 227),  51.18], #73
        [(594, 227),  51.78], #74
        [(702, 227),  52.78], #75
        [(819, 227),  53.05], #76
        [(930, 227),  53.52], #77
        [(1040, 227), 53.72], #78 
        [(505, 486),  54.55], #79
        [(651, 419),  54.82], #80 
        [(769, 350),  55.45], #81
        [(890, 418),  56.48], #82
        [(1024, 482), 57.25], #83
        [(648, 302),  58.22], #84
        [(894, 302),  59.08], #85
        [(499, 612),  59.52], #86
        [(580, 535),  60.25], #87
        [(676, 447),  61.25], #88
        [(782, 347),  61.75], #89
        [(893, 226),  62.15], #90
        [(1035, 617), 62.55], #91
        [(954, 533),  63.55], #92
        [(852, 453),  64.15], #93
        [(752, 344),  64.95], #94
        [(649, 222),  65.35], #95
        [(767, 672),  65.65], #96
        [(953, 542),  65.95], #97
        [(953, 362),  66.15], #98
        [(880, 239),  66.30], #99
        [(657, 242),  66.35], #100
        [(1015, 234), 67.15], #101
        [(1015, 616), 67.90], #102
        [(510, 238),  68.95], #103
        [(510, 589),  69.95], #104
        [(770, 170),  70.95], #105
        [(1078, 426), 71.65], #106S
        [(1014, 303), 72.55], #107
        [(456, 419),  73.15], #108
        [(516, 290),  73.85], #109
        [(478, 620),  74.75], #110
        [(594, 620),  75.35], #111
        [(706, 620),  76.25], #112
        [(814, 620),  77.25], #113
        [(925, 620),  78.05], #114
        [(1039, 620), 78.95], #115
        [(451, 420),  79.85], #116
        [(573, 266),  80.55], #117
        [(765, 214),  81.05], #118
        [(966, 270),  81.95], #119
        [(1080, 420), 82.55], #120
        [(958, 583),  83.45], #121
        [(758, 642),  83.95], #122
        [(582, 578),  84.75], #123
        [(640, 181),  85.25], #124
        [(893, 274),  85.95], #125
        [(638, 365),  86.95], #126
        [(885, 470),  87.85], #127
        [(643, 570),  88.85], #128
        [(894, 663),  89.85], #129
        [(394, 314),  90.65], #130
        [(530, 420),  91.45], #131
        [(679, 330),  92.25], #132
        [(830, 420),  93.35], #133
        [(990, 330),  94.25], #134
        [(1140, 420), 94.95], #135
        [(760, 420),  96.05], #136
        [(640, 350),  96.35], #137
        [(890, 350),  96.85], #138
        [(510, 480),  97.45], #139
        [(640, 420),  98.15], #140
        [(770, 350),  98.55], #141
        [(900, 420),  99.55], #142
        [(1030, 490), 99.95], #143
        [(460, 420),  100.35],  #144
        [(520, 300),  101.05], #145
        [(1080, 420), 101.85], #146 direita meio
        [(1020, 300), 102.25], #147 direita acima
        [(460, 420),  102.85], #148 esquerda meio
        [(520, 300),  103.55], #149 esquerda cima
        [(770, 420),  103.95], #151 (meio)
        [(460, 420),  104.95], #152 
        [(520, 280),  107.15], #153
        [(660, 470),  108.05], #154
        [(740, 320),  108.55], #155
        [(500, 600),  109.35], #156
        [(590, 530),  109.95], #157
        [(680, 450),  110.75], #158
        [(770, 350),  111.15], #159
        [(890, 220),  112.55], #160
        [(650, 350),  113.05], #161
        [(890, 350),  113.55], #162
        [(520, 480),  113.95], #163
        [(1010, 490), 114.05], #164
        [(1040, 620), 114.55], #165
        [(950, 539),  114.75], #166
        [(840, 440),  115.45], #167
        [(760, 350),  116.05], #168
        [(650, 220),  116.55], #169
        [(460, 420),  117.05], #170
        [(1020, 220), 117.25], #171
        [(1090, 380), 117.85], #172
        [(640, 420),  120.75], #173
        [(770, 350),  121.75], #174
        [(890, 420),  122.75] #175 
]
sta = time.time()
lag, lag2 = 0, 0
for i in range(len(pos_time)):

    mouse.position = pos_time[i][0]
    print({i})
    print(pos_time[i][0])
    mouse.click(Button.left, 1)
    end = time.time()
    lag = end - sta
#    print(f'lag time {lag}')
#    if pos_time[i][1] == 1.50:
#        sleep_time = 0
#    else:
    sleep_time = pos_time[i+1][1] - pos_time[i][1] - lag - lag2
    print(f'sleep time {sleep_time}')
    #print(sleep_time)
    #print(pos_time[i+1][1])
    #print(pos_time[i][1])
    if sleep_time > 0:
        time.sleep(sleep_time)
    lag2 = time.time() - end - sleep_time
#    print(f'2nd lag {time.time() - end - sleep_time}')
    sta = time.time()
